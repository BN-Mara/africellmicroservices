version: '3.0'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server
    volumes:
      - dbdata:/var/opt/mssql
  
  mongodb:
    image: mongo
  
  rabbitmq:
    image: 'rabbitmq:3-management-alpine'

  redis:
    image: redis

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.9.1'
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    image: 'docker.elastic.co/logstash/logstash:7.9.1'
    depends_on:
      - elasticsearch

  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.9.1'
    depends_on:
      - elasticsearch

  internal-gateway:
    image: 'volosoft/microservice-demo-internal-gateway:${TAG:-latest}'
    build:
      context: ./
      dockerfile: gateways/InternalGateway.Host/Dockerfile
    depends_on:
      - elasticsearch
      - redis
      - sqlserver
      - identity-service
      - subscriber-service
      - survey-service
  
  backend-admin-app-gateway:
    image: 'volosoft/microservice-demo-backend-admin-app-gateway:${TAG:-latest}'
    build:
      context: ../../
      dockerfile: samples/MicroserviceDemo/gateways/BackendAdminAppGateway.Host/Dockerfile
    depends_on:
      - elasticsearch
      - redis
      - sqlserver
      - identity-service
      - product-service
  
  public-website-gateway:
    image: 'volosoft/microservice-demo-public-website-gateway:${TAG:-latest}'
    build:
      context: ./
      dockerfile: gateways/PublicWebSiteGateway.Host/Dockerfile
    depends_on:
      - elasticsearch
      - redis
      - subscriber-service
      - survey-service
  
  survey-service:
    image: 'volosoft/microservice-demo-blogging-service:${TAG:-latest}'
    build:
      context: ./
      dockerfile: microservices/SurveyService.Host/Dockerfile
    depends_on:
      - elasticsearch
      - mongodb
      - redis
  
  identity-service:
    image: 'volosoft/microservice-demo-identity-service:${TAG:-latest}'
    build:
      context: ./
      dockerfile: microservices/IdentityService.Host/Dockerfile
    depends_on:
      - elasticsearch
      - rabbitmq
      - redis
      - sqlserver
  
  subscriber-service:
    image: 'volosoft/microservice-demo-product-service:${TAG:-latest}'
    build:
      context: ./
      dockerfile: microservices/SubscriberService.Host/Dockerfile
    depends_on:
      - elasticsearch
      - sqlserver
      - redis
  
  auth-server:
    image: 'volosoft/microservice-demo-auth-server:${TAG:-latest}'
    build:
      context: ./
      dockerfile: applications/AuthServer.Host/Dockerfile
    depends_on:
      - elasticsearch
      - redis
      - rabbitmq
      - identity-service
  
  backend-admin-app:
    image: 'volosoft/microservice-demo-backend-admin-app:${TAG:-latest}'
    build:
      context: ./
      dockerfile: applications/BackendAdminApp.Host/Dockerfile
    depends_on:
      - elasticsearch
      - backend-admin-app-gateway
  
  public-website:
    image: 'volosoft/microservice-demo-public-website:${TAG:-latest}'
    build:
      context: ./
      dockerfile: applications/PublicWebSite.Host/Dockerfile
    depends_on:
      - elasticsearch
      - public-website-gateway

volumes:
  dbdata:
  esdata: